{
	"metadata": {
		"version": 2
	},
	"application": {
		"name": "dimitris-test",
		"language": "GOLANG",
		"artifact_store": {
			"repositories": null
		}
	},
	"pipeline": {
		"segments": [
			{
				"name": "Build",
				"segment_type": "build",
				"publish_attributes": {
					"publish": true,
					"docker_images": [
						{
							"repository": "((application.name))",
							"tags": [
								"((application.version))"
							],
							"context": "."
						}
					]
				},
				"exit_actions": {},
				"properties": [
					{
						"name": "gopath",
						"value": "${SEGMENT_BASE_DIR}/cache/go",
						"description": "GOPATH is set to ${SEGMENT_BASE_DIR}/cache/go by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created"
					}
				],
				"deployment_strategy": {},
				"application_init": {},
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"cache_info": {
					"paths": [
						"((gopath))"
					]
				}
			},
			{
				"name": "Release",
				"segment_type": "release",
				"run_after": [
					"Build"
				],
				"exit_actions": {},
				"deployment_strategy": {
					"canaries": 1,
					"max_in_flight": 1,
					"canary_watch_time": "5000-30000",
					"update_watch_time": "5000-30000",
					"serial": false
				},
				"application_init": {},
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"k8s_instance_groups": [
					{
						"tool_config_alias_id": "2c99a7d3-76d8-40be-4d71-f7811bc9a338",
						"docker_registry_alias_id": "cc9edc73-f30b-4c9a-5d01-e03f7930a904",
						"name": "((application.name))",
						"cluster_name": "",
						"namespace": "((application.name))-((application.branch))",
						"replicas": 1,
						"containers": [
							{
								"name": "((application.name))",
								"image": "guide-rails/((application.name)):((application.version))",
								"ports": [
									{
										"name": "http1",
										"hostPort": 8080,
										"containerPort": 8080,
										"protocol": "TCP"
									}
								],
								"resources": {},
								"imagePullPolicy": "Always",
								"securityContext": {
									"capabilities": {
										"drop": [
											"ALL"
										]
									},
									"runAsNonRoot": false,
									"allowPrivilegeEscalation": false
								}
							}
						],
						"ingress_enabled": true,
						"ingress": {
							"metadata": {
								"creationTimestamp": null
							},
							"spec": {
								"rules": [
									{
										"host": "((application.name)).guide-rails.io",
										"http": {
											"paths": [
												{
													"path": "/http1/*",
													"backend": {
														"servicePort": 0
													}
												}
											]
										}
									}
								]
							},
							"status": {
								"loadBalancer": {}
							}
						},
						"load_balancing_type": 2,
						"service_name": "((application.name))-((application.branch))",
						"alb_ingress_controller_annotations": {
							"alb.ingress.kubernetes.io/certificate-arn": "arn:aws:iam::818130157321:server-certificate/guide-rails-wildcard-20230627,arn:aws:acm:us-west-2:818130157321:certificate/5d9b1608-cc23-4101-96f8-8b4d3def0d58",
							"alb.ingress.kubernetes.io/healthcheck-path": "/",
							"alb.ingress.kubernetes.io/healthcheck-port": "traffic-port",
							"alb.ingress.kubernetes.io/listen-ports": "[{\"HTTP\": 80}, {\"HTTPS\":443}]",
							"alb.ingress.kubernetes.io/scheme": "internet-facing",
							"alb.ingress.kubernetes.io/ssl-policy": "ELBSecurityPolicy-FS-1-2-Res-2020-10",
							"alb.ingress.kubernetes.io/ssl-redirect": "443",
							"alb.ingress.kubernetes.io/subnets": "subnet-0824acafe912d3997, subnet-0e2334d4d4099bfcd"
						},
						"type": "Deployment",
						"deploy_application": true
					}
				],
				"deployment_target": 2
			}
		],
		"exit_actions": {},
		"default_properties": [],
		"deployment_files": [],
		"application_init": {}
	},
	"organization": {
		"orgname": "GR-Product"
	}
}